generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  role      String     @default("USER")
  ratings   Rating[]
  purchases Purchase[]
}

model Device {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  price           Int
  //unused
  avgRating       Int              @default(0)
  description     String           @default("")
  img             String
  //unused
  typeId          Int
  brandId         Int
  ratings         Rating[]
  deviceInfo      DeviceInfo[]
  type            Type             @relation(fields: [typeId], references: [id])
  brand           Brand            @relation(fields: [brandId], references: [id])
  purchaseDevices PurchaseDevice[]
}

model Type {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  devices    Device[]
  brands     Brand[]
  typeBrands TypeBrand[]
}

model Brand {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  devices    Device[]
  types      Type[]
  typeBrands TypeBrand[]
}

model Rating {
  id       Int    @id @default(autoincrement())
  rate     Int
  userId   Int
  deviceId Int
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  device   Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@unique([userId, deviceId])
}

model Purchase {
  id              Int              @id @default(autoincrement())
  date            DateTime
  userId          Int
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  purchaseDevices PurchaseDevice[]
}

model PurchaseDevice {
  id         Int      @id @default(autoincrement())
  purchaseId Int
  deviceId   Int
  purchase   Purchase @relation(fields: [purchaseId], references: [id], onDelete: Cascade)
  device     Device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)
}

model DeviceInfo {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  deviceId    Int
  device      Device @relation(fields: [deviceId], references: [id])
}

model TypeBrand {
  id      Int   @id @default(autoincrement())
  typeId  Int
  brandId Int
  type    Type  @relation(fields: [typeId], references: [id])
  brand   Brand @relation(fields: [brandId], references: [id])
}
